@tailwind base;
@tailwind components;
@tailwind utilities;

/* CSS Custom Properties for viewport */
:root {
  --vh: 1vh;
  --actual-height: 100vh;
}

/* Mobile viewport fix */
html,
body {
  height: 100%;
  height: calc(var(--vh, 1vh) * 100);
  width: 100%;
  margin: 0;
  padding: 0;
  overflow: hidden;
  background-color: #000;
}

/* Hide scrollbars for horizontal tag scrolling */
.scrollbar-hide {
  -ms-overflow-style: none; /* Internet Explorer 10+ */
  scrollbar-width: none; /* Firefox */
}
.scrollbar-hide::-webkit-scrollbar {
  display: none; /* Safari and Chrome */
}

/* Media sizing based on orientation and screen size */
@media (orientation: portrait) and (max-width: 768px) {
  .media-item img,
  .media-item video {
    width: 100% !important;
    height: auto !important;
    max-height: 100% !important;
    max-width: none !important;
  }
}

@media (orientation: landscape) and (min-width: 769px) {
  .media-item img,
  .media-item video {
    width: auto !important;
    height: 100% !important;
    max-width: 100% !important;
    max-height: none !important;
  }
}

/* Tablet portrait - still use full width */
@media (orientation: portrait) and (min-width: 769px) and (max-width: 1024px) {
  .media-item img,
  .media-item video {
    width: 100% !important;
    height: auto !important;
    max-height: 100% !important;
    max-width: none !important;
  }
}

#root {
  height: 100%;
  height: calc(var(--vh, 1vh) * 100);
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #000;
}

/* Fix for mobile viewport height issues */
.container {
  height: 100vh;
  height: calc(var(--vh, 1vh) * 100);
  min-height: 100vh;
  min-height: calc(var(--vh, 1vh) * 100);
  width: 100%;
  max-width: 100%;
  background-color: #000;
}

/* Ensure media container takes full height */
.media-container {
  height: 100%;
  width: 100%;
  position: relative;
  background-color: #000;
}

/* Media wrapper - this is what gets transformed during touch gestures */
.media-wrapper {
  height: 100%;
  width: 100%;
  position: relative;
  /* Remove default transition - will be added dynamically during touch */
}

/* Media items - properly centered like original */
.media-item {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Ensure media elements are properly sized and centered */
.media-item img,
.media-item video {
  max-height: 100%;
  max-width: 100%;
  object-fit: cover;
}

/* Custom styles for black shades used in the original app */
.bg-black-shades-500 {
  background-color: rgba(64, 64, 64, 1);
}

.bg-black-shades-600 {
  background-color: rgba(48, 48, 48, 1);
}

.bg-black-shades-700 {
  background-color: rgba(32, 32, 32, 1);
}

.bg-black-shades-800 {
  background-color: rgba(16, 16, 16, 1);
}

/* Video progress bar styles */
.video-progress-container {
  transition: bottom 0.3s ease;
}

/* Animation classes */
.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Mobile-specific fixes */
@media screen and (max-width: 768px) {
  /* Ensure proper height on mobile */
  html,
  body,
  #root,
  .container {
    height: 100vh;
    height: calc(var(--vh, 1vh) * 100);
    min-height: 100vh;
    min-height: calc(var(--vh, 1vh) * 100);
  }

  /* Fix for iOS Safari */
  @supports (-webkit-touch-callout: none) {
    html,
    body,
    #root,
    .container {
      height: var(--actual-height, 100vh);
      min-height: var(--actual-height, 100vh);
    }
  }

  /* Ensure navigation is visible */
  .navigation {
    position: fixed;
    z-index: 1000;
  }
}

/* Portrait orientation specific fixes */
@media screen and (max-width: 768px) and (orientation: portrait) {
  .container {
    height: 100vh;
    height: calc(var(--vh, 1vh) * 100);
    min-height: 100vh;
    min-height: calc(var(--vh, 1vh) * 100);
  }

  /* Ensure media is properly centered and sized in portrait */
  .media-item {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .media-item img,
  .media-item video {
    max-height: calc(100vh - 120px); /* Account for navigation */
    max-height: calc(calc(var(--vh, 1vh) * 100) - 120px);
    max-width: 100%;
    object-fit: contain; /* Use contain for portrait to ensure full visibility */
  }
}

/* Landscape orientation - use cover for better fill */
@media screen and (orientation: landscape) {
  .media-item img,
  .media-item video {
    object-fit: cover;
  }
}

/* Prevent zoom on input focus (mobile) */
input,
select,
textarea {
  font-size: 16px;
}

/* Loading and error message positioning */
.placeholder-message,
.error-message {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 50;
  text-align: center;
  padding: 20px;
  max-width: 90%;
}

/* Video overlay positioning */
.video-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Debug helper - remove in production */
.debug-height {
  border: 2px solid red;
  background: rgba(255, 0, 0, 0.1);
}

@media (orientation: landscape) and (min-width: 769px) {
  .media-item img,
  .media-item video {
    width: auto !important;
    height: 100% !important;
    max-width: 100% !important;
    max-height: none !important;
  }
}

/* Tablet portrait - still use full width */
@media (orientation: portrait) and (min-width: 769px) and (max-width: 1024px) {
  .media-item img,
  .media-item video {
    width: 100% !important;
    height: auto !important;
    max-height: 100% !important;
    max-width: none !important;
  }
}

#root {
  height: 100%;
  height: calc(var(--vh, 1vh) * 100);
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #000;
}

/* Fix for mobile viewport height issues */
.container {
  height: 100vh;
  height: calc(var(--vh, 1vh) * 100);
  min-height: 100vh;
  min-height: calc(var(--vh, 1vh) * 100);
  width: 100%;
  max-width: 100%;
  background-color: #000;
}

/* Ensure media container takes full height */
.media-container {
  height: 100%;
  width: 100%;
  position: relative;
  background-color: #000;
}

/* Media wrapper - this is what gets transformed during touch gestures */
.media-wrapper {
  height: 100%;
  width: 100%;
  position: relative;
  /* Remove default transition - will be added dynamically during touch */
}

/* Media items - properly centered like original */
.media-item {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Ensure media elements are properly sized and centered */
.media-item img,
.media-item video {
  max-height: 100%;
  max-width: 100%;
  object-fit: cover;
}

/* Custom styles for black shades used in the original app */
.bg-black-shades-500 {
  background-color: rgba(64, 64, 64, 1);
}

.bg-black-shades-600 {
  background-color: rgba(48, 48, 48, 1);
}

.bg-black-shades-700 {
  background-color: rgba(32, 32, 32, 1);
}

.bg-black-shades-800 {
  background-color: rgba(16, 16, 16, 1);
}

/* Video progress bar styles */
.video-progress-container {
  transition: bottom 0.3s ease;
}

/* Animation classes */
.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Mobile-specific fixes */
@media screen and (max-width: 768px) {
  /* Ensure proper height on mobile */
  html,
  body,
  #root,
  .container {
    height: 100vh;
    height: calc(var(--vh, 1vh) * 100);
    min-height: 100vh;
    min-height: calc(var(--vh, 1vh) * 100);
  }

  /* Fix for iOS Safari */
  @supports (-webkit-touch-callout: none) {
    html,
    body,
    #root,
    .container {
      height: var(--actual-height, 100vh);
      min-height: var(--actual-height, 100vh);
    }
  }

  /* Ensure navigation is visible */
  .navigation {
    position: fixed;
    z-index: 1000;
  }
}

/* Portrait orientation specific fixes */
@media screen and (max-width: 768px) and (orientation: portrait) {
  .container {
    height: 100vh;
    height: calc(var(--vh, 1vh) * 100);
    min-height: 100vh;
    min-height: calc(var(--vh, 1vh) * 100);
  }

  /* Ensure media is properly centered and sized in portrait */
  .media-item {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .media-item img,
  .media-item video {
    max-height: calc(100vh - 120px); /* Account for navigation */
    max-height: calc(calc(var(--vh, 1vh) * 100) - 120px);
    max-width: 100%;
    object-fit: contain; /* Use contain for portrait to ensure full visibility */
  }
}

/* Landscape orientation - use cover for better fill */
@media screen and (orientation: landscape) {
  .media-item img,
  .media-item video {
    object-fit: cover;
  }
}

/* Prevent zoom on input focus (mobile) */
input,
select,
textarea {
  font-size: 16px;
}

/* Loading and error message positioning */
.placeholder-message,
.error-message {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 50;
  text-align: center;
  padding: 20px;
  max-width: 90%;
}

/* Video overlay positioning */
.video-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Debug helper - remove in production */
.debug-height {
  border: 2px solid red;
  background: rgba(255, 0, 0, 0.1);
}

.slide-enter {
  transform: translateY(-100%);
}

.slide-enter-active {
  transform: translateY(0);
  transition: transform 200ms cubic-bezier(0.4, 0, 0.2, 1);
}

.slide-exit {
  transform: translateY(0);
}

.slide-exit-active {
  transform: translateY(-100%);
  transition: transform 200ms cubic-bezier(0.4, 0, 0.2, 1);
}

.fade-enter {
  opacity: 0;
}

.fade-enter-active {
  opacity: 1;
  transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1);
}

.fade-exit {
  opacity: 1;
}

.fade-exit-active {
  opacity: 0;
  transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1);
}

.tag-animated {
  transition: transform 300ms ease-in-out;
}

.tag-fade-enter {
  opacity: 0;
}

.tag-fade-enter-active {
  opacity: 1;
  transition: opacity 300ms ease-in-out;
}

.tag-fade-exit {
  opacity: 1;
}

.tag-fade-exit-active {
  opacity: 0;
  transition: opacity 300ms ease-in-out;
}

.fade-scale-enter {
  opacity: 0;
  transform: scale(0.9);
}

.fade-scale-enter-active {
  opacity: 1;
  transform: scale(1);
  transition: opacity 300ms ease-in-out, transform 300ms ease-in-out;
}

.fade-scale-exit {
  opacity: 1;
  transform: scale(1);
}

.fade-scale-exit-active {
  opacity: 0;
  transform: scale(0.9);
  transition: opacity 300ms ease-in-out, transform 300ms ease-in-out;
}
